// Complete DAZ Studio Licensing Report Generator
// Self-contained script that analyzes scene assets and generates licensing report

var dir_self = new DzDir(new DzFileInfo(getScriptFileName()).path());
include(dir_self.filePath("getInstalledProducts.dsa"));
include(dir_self.filePath("getUsedAssets.dsa"));

var usedAssets = getUsedAssets();
var installedProducts = getInstalledProducts();

function createListing() {
  print("=== DAZ Studio Licensing Report Generator ===");

  if (!usedAssets || usedAssets.length === 0) {
    print("No used assets found in the current scene.");
    return;
  }

  if (!installedProducts || installedProducts.length === 0) {
    print("No installed products found.");
    return;
  }

  var output = [];
  output.push("=== DAZ STUDIO LICENSING SUMMARY ===");
  output.push("Generated: " + new Date().toLocaleString());
  //file.writeLine("Scene: " + Scene.getFilename());
  output.push("");
  output.push("PRODUCTS REQUIRING LICENSING REVIEW:");
  output.push("");

  // Create a map of product names to their details
  var productMap = {};
  for (var i = 0; i < installedProducts.length; i++) {
    var product = installedProducts[i];
    productMap[product.name] = product;
  }

  // Check each used asset against installed products
  for (var j = 0; j < usedAssets.length; j++) {
    var asset = usedAssets[j];
    var product = productMap[asset.technicalName];

    if (product) {
      output.push(
        "- " +
          asset.name +
          " (" +
          asset.technicalName +
          ") - Product: " +
          product.name
      );
      output.push("  Details: " + product.details);
      output.push("  Version: " + product.version);
      output.push("");
    } else {
      output.push(
        "- " + asset.name + " (" + asset.technicalName + ") - No product found"
      );
      output.push("");
    }
  }

  // Write to file
  var filePath = dir_self.filePath("licensing_report.txt");
  var file = new DzFile(filePath);

  if (file.open(DzFile.WriteOnly | DzFile.Text)) {
    file.write(output.join("\n"));
    file.close();
    print("Licensing report generated at: " + filePath);
  } else {
    print("Failed to write licensing report to: " + filePath);
  }
}

// Run the listing creation
createListing();
